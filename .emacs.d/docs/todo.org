#+TAGS: { bug(b) improvement(i) package(p) }
#+TODO: TODO EVAL(!)
* General [3/34]
** EVAL Fix smerge bindings
- State "EVAL"       from "TODO"       [2020-03-03 ti 11:21]
- [[*Find a way to do mode specific additions to prefix maps][Find a way to do mode specific additions to prefix maps]]
- smerge-next
- smerge-previous
- smerge-keep-upper
- smerge-keep-lower
** EVAL Load only specific things from custom file
- State "EVAL"       from "TODO"       [2020-05-28 to 15:13]
- Custom file can contain old settings that were removed from init file
** EVAL Check for new evil-collection modes
- State "EVAL"       from "TODO"       [2023-01-10 ti 11:24]
- https://github.com/emacs-evil/evil-collection/tree/master/modes
** TODO Semantic movement [1/3]
*** EVAL Figure out functionality and bindings
- State "EVAL"       from "TODO"       [2020-05-16 Sat 14:50]
**** next or prev (<down> <up>)
File order corresponds to depth first movement in a tree
**** next or prev same level (<right> <left>)
Allow to go via one node that is one level higher:
  * C - B - C can jump C to C
  * B - A - C - C - B  can jump B to B as lower level nodes don't matter
  * C - A - B - C cannot jump C to C, because A is two levels higher
  * C - B - B - C cannot jump C to C, because the following B does not have C level node
**** next or prev higher level node (C-M-n C-M-p)
Fall back to sibling at top level
*** TODO Implement required functions for different major modes [1/3]
**** EVAL org-mode
- State "EVAL"       from "TODO"       [2020-05-16 Sat 15:00]
<down>  outline-next-visible-heading
<up>    outline-previous-visible-heading
<right> my/org-forward-heading-same-level
<left>  my/org-backward-heading-same-level
C-M-p   my/outline-up-heading
C-M-n   my/outline-down-heading
**** TODO Programming modes
***** Treesitter
- https://github.com/mickeynp/combobulate
- https://old.reddit.com/r/emacs/comments/chnxzm/dynamic_module_binding_for_treesitter_an/
- https://github.com/polaris64/symex-ts

***** LSP
- LSP: textDocument/documentSymbol
  - https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol
  - children is the intended source
  - containerName is a hacky posibility
  - also ranges could be used
- lsp-treemacs-symbols-list for reference
  - https://github.com/emacs-lsp/lsp-treemacs
- potential helper: hierarchy
  - https://github.com/DamienCassou/hierarchy
- built-in end-of-defun beginning-of-defun
**** TODO Magit
- magit-section-forward
- magit-section-backward
- magit-section-forward-sibling
- magit-section-backward-sibling
- magit-section-up
*** TODO Ivy / helm interface
- Swiper like search for document symbols
- imenu might be good enough
- but automatic jump would be nice
- https://old.reddit.com/r/emacs/comments/3mtus3/how_to_display_a_list_of_classes_functions_etc/
** TODO Add open in other window action to counsel-find-file and ivy-switch-buffer
- Action exists (M-o j), but have a direct binding
- ivy-switch-buffer-map
- ivy--switch-buffer-other-window-action
- counsel-find-file-map
- find-file-other-window
** TODO my/split-line messes up dot
** TODO Marks
- M create mark
- m jump to mark
- persistent marks
   - desktop would work
   - use desktop with very strict settings
   - savehist mode (savehist-additional-variables)
- use lower case for global marks
   - hack evil-global-marker-p?
- https://github.com/Andrew-William-Smith/evil-fringe-mark
- https://github.com/xueeinstein/helm-evil-markers
** TODO Help
- allow asking for minibuffer binds
- https://www.emacswiki.org/emacs/HelpPlus
- https://github.com/Wilfred/helpful
** TODO Configure spaceline
- spaceline-config.el has the current config
- https://github.com/TheBB/spaceline
- check the available segments
** TODO Autoindent pasted text
- https://www.emacswiki.org/emacs/AutoIndentation
** TODO Full sized splits with earlier splits
- https://emacs.stackexchange.com/questions/585/split-window-at-outermost-border
** TODO Add toggle for lsp-ui hover and doc
** TODO Move company select to f keys
** TODO Send file to visual studio
- https://blogs.msdn.microsoft.com/saraford/2008/11/19/did-you-know-you-can-use-devenv-exe-edit-to-open-a-file-in-an-existing-visual-studio-instance-360/
- https://github.com/evgeny-panasyuk/open-in-msvs.el
- https://stackoverflow.com/questions/44130341/open-file-in-existing-instance-of-visual-studio-2017
- https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2010/aa991989(v=vs.100)?redirectedfrom=MSDN
** TODO Save when switching buffers
- https://stackoverflow.com/questions/1413837/emacs-auto-save-on-switch-buffer
** TODO Emacs crashes if h is pressed at the end of a folded org heading
- Happens when line numbers are enabled
** TODO Find a way to do mode specific additions to prefix maps
- For example bind "; a" to lsp-execute-code-action
- generic function (handle)
- derived prefix maps
- Org-mode bindings work. Investigate why.
  - Regular ; bindings use evil global maps
  - org-mode binds with :states so to evil auxiliary maps
  - lsp binds without :states so minor mode maps
  - And the preference is evil-auxiliary > evil-global > minor-mode
  - Also evil probably does some magic so auxiliary binds work together with global binds
** TODO Investigate straight find failure
- Apparently `call-process` evaluates wildcards on windows
- https://github.com/raxod502/straight.el/issues/124
** TODO Emacs package dev handbook
- https://github.com/alphapapa/emacs-package-dev-handbook
** TODO Clean up company-backends
[[compdef][compdef]]
** TODO Try start-up optimizations
- https://old.reddit.com/r/emacs/comments/fyqkip/rme_ryans_minimal_emacs/fn21psa/
** TODO Investigate if isearch-lazy-count in Emacs 27 can replace anzu.el
** TODO which-key-show-top-level
** TODO early-init
- Emacs 27
- https://github.com/hlissner/doom-emacs/blob/develop/early-init.el
** TODO Speed up magit
- https://jakemccrary.com/blog/2020/11/14/speeding-up-magit/
** TODO Better projectile-find-file
https://github.com/Gleek/emacs.d/search?q=projectile-find-file
https://umarahmad.xyz/blog/improved-ranking-for-projectile-find-file/
** TODO Selectrum etc
- https://old.reddit.com/r/emacs/comments/kqutap/selectrum_prescient_consult_embark_getting_started/
- https://github.com/raxod502/selectrum
- https://github.com/minad/consult
- https://github.com/minad/marginalia
- https://github.com/oantolin/embark
- https://kristofferbalintona.me/posts/vertico-marginalia-all-the-icons-completion-and-orderless/
** TODO Evil motion training
- https://martin.baillie.id/wrote/evil-motion-training-for-emacs/
** TODO Fix git submodule workpaths
- .git/modules/{module_path}/config contains the worktree property
- The worktree path gets messed up because of the ~/Dotfiles/.emacs.d/-> ~/.emacs.d symlink
  - Git initializes with the full path, but status uses the abbreviated path.
#+BEGIN_SRC
fatal: cannot chdir to '../../../../../../../../../../.emacs.d/straight/repos/emacs-tree-sitter/doc/themes/docdock': No such file or directory
fatal: 'git status --porcelain=2' failed in submodule doc/themes/docdock
#+END_SRC
** TODO start-evil-substitution-on-selection
https://philjackson.github.io//evil/emacs/2021/07/11/start-evil-substitution-on-selection/
** TODO Investigate slow diff perfomance
- kzproj files take several minutes to show in status buffer
** TODO Improve compilation-mode
- https://old.reddit.com/r/emacs/comments/w07vrf/thoughts_on_improving_compilation_mode/
- https://codeberg.org/ideasman42/emacs-fancy-compilation
- https://www.gnu.org/software/emacs/manual/html_node/emacs/Compilation-Mode.html

** TODO Improve display-buffer-alist
- https://www.masteringemacs.org/article/demystifying-emacs-window-manager
** TODO M-n to work with consult-lsp
- consult--grep sets `:add-history (consult--async-split-thingatpt 'symbol)`
- consult-lsp does not
* Org-mode [1/10]
** EVAL org-cycle jumps to the beginning of line
- State "EVAL"       from "TODO"       [2019-08-20 Tue 14:16]
- There needs to be a space between the bullets and point for it to work correctly
  - In list items this is not necessary
  - What actually controls this?
  - And can it be hacked?
- evil-move-beyond-eol is needed to make this possible
** TODO Org-mode capture templates [0/2]
*** TODO Automatically fill the package description from link on clipboard
*** TODO Work todo
** TODO Org-mode agenda templates
** TODO Add org-chef sites [0/4]
*** TODO Smitten kitchen
*** TODO Bon appetit
*** TODO Alton Brown
*** TODO Binging with Babish
** TODO Figure out how to do archiving
** TODO Heading movement doesn't work in visual mode
** TODO org-goto
- https://emacs.stackexchange.com/questions/32617/how-to-jump-directly-to-an-org-headline
** TODO org-habit
- https://orgmode.org/manual/Tracking-your-habits.html
** TODO org-ql
- An Org-mode query language, including search commands and saved views
- https://github.com/alphapapa/org-ql
** TODO org-use-speed-commands
* Packages [6/42]
** EVAL YASnippet
- https://github.com/joaotavora/yasnippet

** EVAL doom-themes
- State "EVAL"       from "TODO"       [2020-01-10 pe 16:05]
- https://github.com/hlissner/emacs-doom-themes

** EVAL explain-pause-mode
- State "EVAL"       from "TODO"       [2020-07-15 ke 13:21]
- Emacs minor mode that watches for long pauses and reports them.
- https://github.com/lastquestion/explain-pause-mode

** EVAL evil-textobj-tree-sitter
- State "EVAL"       from "TODO"       [2022-06-06 ma 15:35]
- Tree-sitter powered textobjects for evil mode in Emacs.
- https://github.com/meain/evil-textobj-tree-sitter
- https://blog.meain.io/2022/more-treesitter-emacs/
- move between text objects: https://github.com/meain/dotfiles/blob/34ef5e3331757ac32dd066f5baa54f76cf78211b/emacs/.config/emacs/init.el#L2237-L2256

** EVAL npm.el
- State "EVAL"       from "TODO"       [2022-07-08 pe 16:37]
- NPM client for emacs
- https://github.com/shaneikennedy/npm.el

** EVAL corfu
- State "EVAL"       from "TODO"       [2023-01-10 ti 11:48]
- https://github.com/minad/corfu
- https://kristofferbalintona.me/posts/corfu-kind-icon-and-corfu-doc/
- https://old.reddit.com/r/emacs/comments/ppg98f/which_completion_framework_do_you_use_and_why/hd99c0r/

** TODO flycheck-posframe
- Display flycheck error messages via posframe.
- https://github.com/alexmurray/flycheck-posframe
- Does not close when moving. (https://github.com/alexmurray/flycheck-posframe/issues/27)

*** Trial config
;; Display flycheck error messages via posframe.
(use-package flycheck-posframe
  :after flycheck
  :disabled ; Doesn't close when moving away from the error.
  :config
  (set-face-attribute 'flycheck-posframe-warning-face nil :inherit 'warning)
  (set-face-attribute 'flycheck-posframe-error-face nil :inherit 'error)

  ;; Fix posframe not closing when moving away. https://github.com/doomemacs/doomemacs/issues/6416
  (defun flycheck-posframe-monitor-post-command ()
    (when (not (flycheck-posframe-check-position))
      (posframe-hide flycheck-posframe-buffer)))
  (defun fix-flycheck-posframe-not-hide-immediately ()
    (cond (flycheck-posframe-mode
           (add-hook 'post-command-hook 'flycheck-posframe-monitor-post-command nil t))
          ((not flycheck-posframe-mode)
           (remove-hook 'post-command-hook 'flycheck-posframe-monitor-post-command t))))
  (add-hook 'flycheck-posframe-mode #'fix-flycheck-posframe-not-hide-immediately)

  (add-hook 'flycheck-mode-hook #'flycheck-posframe-mode))

** TODO Agressive indent
- minor mode that keeps your code always indented
- https://github.com/Malabarba/aggressive-indent-mode

** TODO ws-butler
- Unobtrusively trim extraneous white-space *ONLY* in lines edited.
- https://github.com/lewang/ws-butler

** TODO wgrep
- wgrep allows you to edit a grep buffer and apply those changes to the file buffer.
- https://github.com/mhayashi1120/Emacs-wgrep

** TODO targets
- Extension of evil text objects (not "stable" but feel free to try and give feedback)
- https://github.com/noctuid/targets.el

** TODO org-projectile
- Manage org-mode TODOs for your projectile projects
- https://github.com/IvanMalison/org-projectile

** TODO compdef
- A stupid Emacs completion definer.
- https://gitlab.com/jjzmajic/compdef

** TODO Dumb-jump
- an Emacs "jump to definition" package for 40+ languages
- https://github.com/jacktasia/dumb-jump

** TODO Rustic
- Rust development environment for Emacs
- https://github.com/brotzeit/rustic

** TODO handle
- A handle for major-mode generic functions.
- https://gitlab.com/jjzmajic/handle

** TODO psession
- Yet another package for emacs persistent sessions
- https://github.com/thierryvolpiatto/psession

** TODO ESUP
- ESUP - Emacs Start Up Profiler
- https://github.com/jschaf/esup

** TODO lsp-treemacs
- Integration between lsp-mode and treemacs and implementation of treeview controls using treemacs as a tree renderer.
- Bug with error list: https://github.com/emacs-lsp/lsp-treemacs/issues/109#issuecomment-1114766364
- https://github.com/emacs-lsp/lsp-treemacs

** TODO dap-mode
- Emacs ❤ Debug Adapter Protocol
- https://github.com/emacs-lsp/dap-mode

** TODO Shackle
- Enforce rules for popup windows
- https://github.com/wasamasa/shackle

** TODO ranger.el
- Dired alternative
- https://github.com/ralesi/ranger.el

** TODO org-roam
- Rudimentary Roam replica with Org-mode
- https://github.com/jethrokuan/org-roam
- https://www.ianjones.us/blog/2020-05-05-doom-emacs/

** TODO org-spacer.el
- Enforce the number of blank lines between elements in an org-mode document
- https://github.com/dustinlacewell/org-spacer.el

** TODO prescient.el
- Simple but effective sorting and filtering for Emacs.
- https://github.com/raxod502/prescient.el

** TODO winds.el
- Window configuration switcher grouped by workspaces
- https://github.com/Javyre/winds.el

** TODO emacs-keypression
- Keystroke visualizer for GUI version Emacs
- Can also show the called functions, which is super useful for debugging
- https://github.com/chuntaro/emacs-keypression

** TODO display-buffer-control
- Control how to open buffers matching specified conditions
- https://gitlab.com/matsievskiysv/display-buffer-control

** TODO org-padding
- https://github.com/TonCherAmi/org-padding

** TODO tree-edit
- Structural editing in Emacs for any™ language!
- https://github.com/ethan-leba/tree-edit

** TODO turbo-log
- https://github.com/Artawower/turbo-log

** TODO evil-lion
- This package provides gl and gL align operators: gl MOTION CHAR and right-align gL MOTION CHAR.
- https://github.com/edkolev/evil-lion

** TODO evil-snipe / avy
- It provides 2-character motions for quickly (and more accurately) jumping around text, compared to evil's built-in f/F/t/T motions, incrementally highlighting candidate targets as you type.
- https://github.com/hlissner/evil-snipe
- avy is a GNU Emacs package for jumping to visible text using a char-based decision tree.
- https://github.com/abo-abo/avy

** TODO evil-commentary
- Alternative to evil-nerd-commenter
- https://github.com/linktohack/evil-commentary

** TODO evil-owl
- evil-owl allows you to view registers and marks before using them.
- https://github.com/mamapanda/evil-owl

** TODO sidekick.el
- Sidekick is a Emacs package that provides information about a symbol inside a single window.
- https://github.com/VernonGrant/sidekick.el

** TODO combobulate
- Structured Editing and Navigation in Emacs
- https://github.com/mickeynp/combobulate

** TODO tsi.el
- use the syntax tree provided by the tree-sitter minor mode as the basis for indentation.
- https://github.com/orzechowskid/tsi.el/

** TODO editorconfig-emacs
- EditorConfig plugin for Emacs
- https://github.com/editorconfig/editorconfig-emacs

** TODO dirvish
- A polished Dired with batteries included
- https://github.com/alexluigit/dirvish
** TODO cape
- Completion At Point Extensions
- https://github.com/minad/cape
** TODO kind-icon
- Completion kind text/icon prefix labelling for emacs in-region completion
- https://github.com/jdtsmith/kind-icon
- https://kristofferbalintona.me/posts/202202270056/#kind-icon
