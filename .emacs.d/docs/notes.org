* Setting up
** compile_commands.json
- cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -G Ninja -B build_compile_commands -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_FLAGS="-Wno-invalid-token-paste -fmacro-backtrace-limit=0 -fmsc-version=1900"
  - use developer command prompt for vs2017
  - make sure there are no old and bad build files
- Linux?: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -G Ninja -B build_compile_commands -DUSE_PCH:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DMSVC
** Hunspell
- install hunspell (choco, homebrew etc.)
  - mingw64: pacman -S  mingw-w64-x86_64-hunspell-en mingw-w64-x86_64-hunspell
  - choco version seemed broken (did not list available dictionaries) (27.5.19)
- download dictionaries
  - https://github.com/wooorm/dictionaries copy and rename
  - https://extensions.libreoffice.org/extensions search, unzip and copy
  - https://wiki.documentfoundation.org/Language_support_of_LibreOffice
- set DICPATH
- set LANG
- copy dictionaries to DICPATH
- name them LANG.dic and LANG.aff
- hunspell -D to verify available dictionaries
- Dictionary 'default' might be required
* Windows
- You can run commands in WSL from emacs using the wsl prefix. For example: (setq mu4e-get-mail-command "wsl offlineimap -c offlineimaprc")
* Check
- http://pages.sachachua.com/.emacs.d/Sacha.html#orgdda953f
- https://ileriseviye.wordpress.com/2019/05/09/how-to-preview-fixed-width-mono-spaced-fonts-in-an-editable-emacs-buffer/
* Redefine keys
- https://old.reddit.com/r/emacs/comments/c0k5qa/defying_your_keyboard_with_elisp/
* Global
- https://github.com/noctuid/evil-guide
- http://ergoemacs.org/emacs/emacs_hyper_super_keys.html
- https://idiocy.org/emacs-fonts-and-fontsets.html
* emacs-lsp
- https://emacs-lsp.github.io/lsp-mode/lsp-mode.html
* Indentation
- evil uses different indendation based on lines and regions (evil-indent)
  - indent-according-to-mode for lines
  - indent-region for others
- https://www.emacswiki.org/emacs/IndentingC
* Refactoring
- http://manuel-uberti.github.io/emacs/2018/02/10/occur/
* Tabbing
- https://www.emacswiki.org/emacs/TabStopList
- https://stackoverflow.com/questions/4006005/how-can-i-set-emacs-tab-settings-by-file-type
- https://www.emacswiki.org/emacs/BackspaceWhitespaceToTabStop
- https://www.emacswiki.org/emacs/IndentationBasics
- https://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation.html#Indentation
- https://emacs.stackexchange.com/questions/27869/how-to-make-evil-mode-tab-key-indent-not-re-indent-based-on-context
* Ivy
- http://oremacs.com/swiper/
- https://github.com/abo-abo/swiper
- https://oremacs.com/2015/04/16/ivy-mode/
- https://writequit.org/denver-emacs/presentations/2017-04-11-ivy.html
- https://www.reddit.com/r/emacs/comments/52lnad/from_helm_to_ivy_a_user_perspective/
* Helm
- https://emacs-helm.github.io/helm/
- https://github.com/emacs-helm/helm-descbinds
- https://tuhdo.github.io/helm-intro.html
* Org
- http://orgmode.org/worg/
- http://doc.norang.ca/org-mode.html
- http://ehneilsen.net/notebook/orgExamples/org-examples.html
- http://thagomizer.com/blog/2017/03/16/five-useful-org-mode-features.html
- https://github.com/Somelauw/evil-org-mode
- https://www.reddit.com/r/orgmode/comments/6mfvb1/syncing_org_files_to_android_orgzly_with_tasker/
- https://www.reddit.com/r/orgmode/comments/6t7ufq/what_are_the_best_packages_plugins_for_org_mode/
* Writing
- https://github.com/tmalsburg/guess-language.el
* Debugging
- toggle-debug-on-quit
- interaction-log-mode
* Profiling
- profiler-start
- profiler-stop
- profiler-report
- https://stackoverflow.com/questions/568150/tips-for-profiling-misbehaving-emacs-lisp
