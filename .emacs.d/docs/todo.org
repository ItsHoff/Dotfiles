#+TAGS: { bug(b) improvement(i) package(p) }
#+TODO: TODO EVAL(!)
* General [2/13]
** TODO [#C] Ivy-occur after ripgrep not jumping to proper files        :bug:
- works fine while in ivy
- jumps to file where the grep was initiated from
- works with git grep
- fails with ripgrep
- works with grep
- https://github.com/ericdanan/counsel-projectile/issues/100
- https://github.com/abo-abo/swiper/issues/795
** TODO my/end-of-line                                          :improvement:
- take a look at how evil-end-of-line is implemented
** TODO Marks                                                   :improvement:
- M create mark
- m jump to mark
- persistent marks
   - desktop would work
   - use desktop with very strict settings
   - savehist mode (savehist-additional-variables)
- use lower case for global marks
   - hack evil-global-marker-p?
- https://github.com/Andrew-William-Smith/evil-fringe-mark
- https://github.com/xueeinstein/helm-evil-markers
** TODO Help                                                    :improvement:
- allow asking for minibuffer binds
- https://www.emacswiki.org/emacs/HelpPlus
- https://github.com/Wilfred/helpful
** TODO Configure spaceline                                     :improvement:
- spaceline-config.el has the current config
- https://github.com/TheBB/spaceline
- check the available segments
** TODO Autoindent pasted text                                  :improvement:
*https://www.emacswiki.org/emacs/AutoIndentation
** TODO Full sized splits with earlier splits                   :improvement:
 * https://emacs.stackexchange.com/questions/585/split-window-at-outermost-border
** TODO Non-editable buffer should be in motion state           :improvement:
  * dired
  * magit
** TODO [#C] Semantic movement                                  :improvement:
*** Get the file hierarchy
- LSP: textDocument/documentSymbol
  - https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol
  - children is the intended source
  - containerName is a hacky posibility
  - also ranges could be used
- lsp-treemacs-symbols-list for reference
  - https://github.com/emacs-lsp/lsp-treemacs
- potential helper: hierarchy
  - https://github.com/DamienCassou/hierarchy
- alternative: treesitter
  - https://old.reddit.com/r/emacs/comments/chnxzm/dynamic_module_binding_for_treesitter_an/
*** Tree movements
**** (next or prev) node
- File order should be depth first
**** (next or prev) sibling
- What to do at the end of sibling chain?
  - go up a level
    - temporarily or permanently?
  - continue to different branch of the tree
    - how many steps through higher level nodes would be allowed (1 or any)
  - revert to next node behaviour until jump to a lower level node would occur
    - save a cycle level
    - allow jumps to higher levels
    - disable jumps to lower levels
**** (next or prev) parent level node
- fall back to sibling at top level
**** In org-mode
- org has all these except next parent level
- siblings movement does not go up levels at all
- org-next-visible-heading
- org-previous-visible-heading
- org-forward-heading-same-level
- org-backward-heading-same-level
- outline-up-heading
*** Potential bindings
- Caps layer
- h for higher level
- l for lower level
- j and k for go up and down inside the level
*** Ivy / helm interface
- imenu might be good enough
- but automatic jump would be nice
- https://old.reddit.com/r/emacs/comments/3mtus3/how_to_display_a_list_of_classes_functions_etc/
** TODO dired                                                   :improvement:
- https://github.com/Fuco1/dired-hacks
- https://www.emacswiki.org/emacs/DiredPlus
** TODO Magit conflicts                                         :improvement:
- https://magit.vc/manual/magit/Resolving-Conflicts.html
** EVAL Exit recursive dired with single keypress               :improvement:
- use a to open stuff (24.4.19)
** EVAL Make properly overriding map for global bindings        :improvement:
- https://github.com/noctuid/general.el#override-keymaps-and-buffer-local-keybindings
- https://github.com/noctuid/evil-guide#what-overrides-evil
- https://github.com/noctuid/evil-guide#keymap-precedence
- is the current solution good enough? (20.4.2019)
* Org-mode [0/3]
** TODO Org-mode capture templates [0/3]
*** TODO Dotfile todo
*** TODO Personal todo
*** TODO Work todo
** TODO Org-mode agenda templates [0/0]
** TODO [#C] Org-mode item insertion                            :improvement:
*** Default
- M-RET insert new heading or item "intelligently"
  - Prefix forces heading
- M-S-RET insert new TODO heading
  - or checkbox item
*** Tables
- M-S-down insert row above
  - with prefix below
- M-S-right insert column left
- C-c - insert horizontal line below
- C-c RET insert horizontal line below and move cursor
*** Desired
- Insert heading above or below
  - Doesn't steal content
  - Maybe option for TODO etc
- Maybe item above or below
* Packages [5/16]                                                   :package:
** EVAL evil-traces
- https://github.com/mamapanda/evil-traces
** EVAL YASnippet
- https://github.com/joaotavora/yasnippet
** TODO flyspell-prog-mode
- flyspell for comments and strings
- built in
** TODO prescient
- sorting and filtering (for ivy and company)
- https://github.com/raxod502/prescient.el
** EVAL keyfreq
- State "EVAL"       from "TODO"       [2019-08-01 Thu 16:54]
- Track command frequency
- https://github.com/dacap/keyfreq
** TODO Org-chef
- Recipes in org
- https://githu.com/Chobbes/org-chef
** TODO doom-todo-ivy
- Display TODO, FIXME, or anything else in an ivy buffer. Extracted from doom-emacs.
- https://github.com/jsmestad/doom-todo-ivy
** EVAL ssh-agency
- State "EVAL"       from "TODO"       [2019-08-01 Thu 16:54]
- Use ssh-agent on Microsoft Windows from Emacs
- https://github.com/magit/ssh-agency
** EVAL gcmh  - the Garbage Collector Magic Hack
- State "EVAL"       from "TODO"       [2019-08-01 Thu 16:53]
- Enforce a sneaky Garbage Collection strategy to minimize GC interference with the activity.
- https://gitlab.com/koral/gcmh/tree/master
** TODO Agressive indent
- minor mode that keeps your code always indented
- https://github.com/Malabarba/aggressive-indent-mode
** TODO ws-butler
- Unobtrusively trim extraneous white-space *ONLY* in lines edited.
- https://github.com/lewang/ws-butler
** TODO wgrep
- wgrep allows you to edit a grep buffer and apply those changes to the file buffer.
- https://github.com/mhayashi1120/Emacs-wgrep
** TODO discover
- Discover more of emacs using context menus.
- https://github.com/mickeynp/discover.el
** TODO benchmark-init
- Benchmark your Emacs initialization
- https://github.com/dholm/benchmark-init-el
** TODO targets
- Extension of evil text objects (not "stable" but feel free to try and give feedback)
- https://github.com/noctuid/targets.el
** TODO org-projectile
- Manage org-mode TODOs for your projectile projects
- https://github.com/IvanMalison/org-projectile
