#+TAGS: { bug(b) improvement(i) package(p) }
#+TODO: TODO EVAL(!)
* General [5/19]
** EVAL Whitespace mode only visualizes tabs in non prog modes
- State "EVAL"       from "TODO"       [2019-08-21 Wed 13:16]
** EVAL Use normal state as the initial state
- https://github.com/noctuid/evil-guide#make-evil-normal-state-the-initial-state-always
- State "EVAL"       from "TODO"       [2019-08-27 Tue 13:02]
** EVAL Try out :defer n
- State "EVAL"       from "TODO"       [2019-12-18 Wed 16:24]
- magit
** EVAL Magit conflicts
- State "EVAL"       from "TODO"       [2019-09-10 Tue 16:35]
- https://magit.vc/manual/magit/Resolving-Conflicts.html
- smerge-next
- smerge-previous
- smerge-keep-upper
- smerge-keep-lower
** EVAL Close extra buffers should not close the current buffer
- State "EVAL"       from "TODO"       [2019-12-20 Fri 14:52]
** TODO Marks
- M create mark
- m jump to mark
- persistent marks
   - desktop would work
   - use desktop with very strict settings
   - savehist mode (savehist-additional-variables)
- use lower case for global marks
   - hack evil-global-marker-p?
- https://github.com/Andrew-William-Smith/evil-fringe-mark
- https://github.com/xueeinstein/helm-evil-markers
** TODO Help
- allow asking for minibuffer binds
- https://www.emacswiki.org/emacs/HelpPlus
- https://github.com/Wilfred/helpful
** TODO Configure spaceline
- spaceline-config.el has the current config
- https://github.com/TheBB/spaceline
- check the available segments
** TODO Autoindent pasted text
- https://www.emacswiki.org/emacs/AutoIndentation
** TODO Full sized splits with earlier splits
- https://emacs.stackexchange.com/questions/585/split-window-at-outermost-border
** TODO Semantic movement [0/3]
*** TODO Figure out functionality and bindings
**** Tree movements
***** (next or prev) node
- File order should be depth first
***** (next or prev) sibling
- What to do at the end of sibling chain?
  - go up a level
    - temporarily or permanently?
  - continue to different branch of the tree
    - how many steps through higher level nodes would be allowed (1 or any)
  - revert to next node behaviour until jump to a lower level node would occur
    - save a cycle level
    - allow jumps to higher levels
    - disable jumps to lower levels
***** (next or prev) parent level node
- fall back to sibling at top level
**** Current setup
- <left> sibling up
- <right> sibling down
- <up> and <down> for go up and down visible headings
- u to go to parent heading
**** Potential bindings
- <left> for higher level
- <right> for lower level
- <up> and <down> for go up and down inside the level
*** TODO Implement required functions for different major modes
**** org-mode
- org has all these except next parent level
- siblings movement does not go up levels at all
- org-next-visible-heading
- org-previous-visible-heading
- org-forward-heading-same-level
- org-backward-heading-same-level
- outline-up-heading
**** Prog modes
- LSP: textDocument/documentSymbol
  - https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol
  - children is the intended source
  - containerName is a hacky posibility
  - also ranges could be used
- lsp-treemacs-symbols-list for reference
  - https://github.com/emacs-lsp/lsp-treemacs
- potential helper: hierarchy
  - https://github.com/DamienCassou/hierarchy
- alternative: treesitter
  - https://old.reddit.com/r/emacs/comments/chnxzm/dynamic_module_binding_for_treesitter_an/
**** Magit
- magit-section-forward
- magit-section-backward
- magit-section-forward-sibling
- magit-section-backward-sibling
- magit-section-up
*** TODO Ivy / helm interface
- Swiper like search for document symbols
- imenu might be good enough
- but automatic jump would be nice
- https://old.reddit.com/r/emacs/comments/3mtus3/how_to_display_a_list_of_classes_functions_etc/
** TODO dired
- https://github.com/Fuco1/dired-hacks
- https://www.emacswiki.org/emacs/DiredPlus
** TODO Add toggle for lsp-ui hover and doc
** TODO Add lsp-mode binds
** TODO Move company select to f keys
** TODO Send file to visual studio
- https://blogs.msdn.microsoft.com/saraford/2008/11/19/did-you-know-you-can-use-devenv-exe-edit-to-open-a-file-in-an-existing-visual-studio-instance-360/
- https://github.com/evgeny-panasyuk/open-in-msvs.el
- https://stackoverflow.com/questions/44130341/open-file-in-existing-instance-of-visual-studio-2017
- https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2010/aa991989(v=vs.100)?redirectedfrom=MSDN
** TODO Save when switching buffers
- https://stackoverflow.com/questions/1413837/emacs-auto-save-on-switch-buffer
** TODO Emacs crashes if h is pressed at the end of a folded org heading
- Happens when line numbers are enabled
** TODO Load only specific things from custom file
- Custom file can contain old settings that were removed from init file
* Org-mode [2/7]
** EVAL Better bindings
- State "EVAL"       from "TODO"       [2019-08-20 Tue 12:16]
- [X] tags
- [X] todo status
- [X] priorities
- [X] refile
** EVAL org-cycle jumps to the beginning of line
- State "EVAL"       from "TODO"       [2019-08-20 Tue 14:16]
- There needs to be a space between the bullets and point for it to work correctly
  - In list items this is not necessary
  - What actually controls this?
  - And can it be hacked?
- evil-move-beyond-eol is needed to make this possible
** TODO Org-mode capture templates [0/2]
*** TODO Automatically fill the package name from link on clipboard
*** TODO Work todo
** TODO Org-mode agenda templates [0/0]
** TODO Add org-chef sites [0/2]
*** TODO Smitten kitchen
*** TODO Bon appetit
** TODO Figure out how to do archiving
** TODO Heading movement doesn't work in visual mode
* Packages [4/23]                                                   :package:
** EVAL Saveplace
- State "EVAL"       from "TODO"       [2019-11-22 Fri 14:23]
** EVAL YASnippet
- https://github.com/joaotavora/yasnippet
** EVAL keyfreq
- State "EVAL"       from "TODO"       [2019-08-01 Thu 16:54]
- Track command frequency
- https://github.com/dacap/keyfreq
** EVAL lsp-ivy
- State "EVAL"       from "TODO"       [2019-12-19 Thu 14:58]
- https://github.com/emacs-lsp/lsp-ivy
** TODO Agressive indent
- minor mode that keeps your code always indented
- https://github.com/Malabarba/aggressive-indent-mode
** TODO ws-butler
- Unobtrusively trim extraneous white-space *ONLY* in lines edited.
- https://github.com/lewang/ws-butler
** TODO wgrep
- wgrep allows you to edit a grep buffer and apply those changes to the file buffer.
- https://github.com/mhayashi1120/Emacs-wgrep
** TODO targets
- Extension of evil text objects (not "stable" but feel free to try and give feedback)
- https://github.com/noctuid/targets.el
** TODO org-projectile
- Manage org-mode TODOs for your projectile projects
- https://github.com/IvanMalison/org-projectile
** TODO compdef
- A stupid Emacs completion definer.
- https://gitlab.com/jjzmajic/compdef
** TODO Dumb-jump
- an Emacs "jump to definition" package for 40+ languages
- https://github.com/jacktasia/dumb-jump
** TODO evil-owl
- preview registers and marks before actually using them
- https://github.com/mamapanda/evil-owl
** TODO Rustic
- Rust development environment for Emacs
- https://github.com/brotzeit/rustic
** TODO handle
- A handle for major-mode generic functions.
- https://gitlab.com/jjzmajic/handle
** TODO org-ql
- An Org-mode query language, including search commands and saved views
- https://github.com/alphapapa/org-ql
** TODO psession
- Yet another package for emacs persistent sessions
- https://github.com/thierryvolpiatto/psession
** TODO doom-themes
- https://github.com/hlissner/emacs-doom-themes
** TODO ESUP
- ESUP - Emacs Start Up Profiler
- https://github.com/jschaf/esup
** TODO lolsmacs
- The Law Of Least Surprise Lattice For Emacs.
- Borrow cool ideas
- https://github.com/grettke/lolsmacs
** TODO lsp-treemacs
- https://github.com/emacs-lsp/lsp-treemacs
** TODO dap-mode
- Emacs ‚ù§ Debug Adapter Protocol
- https://github.com/emacs-lsp/dap-mode
** TODO free-keys
- https://github.com/Fuco1/free-keys
** TODO Shackle
- Enforce rules for popup windows
- https://github.com/wasamasa/shackle
